{"version":3,"sources":["data.js","query.js","AddModule/FormSelect.js","AddModule/AddForm.js","AddModule/AddModuleDashboard.js","Counters/ListItem.js","Counters/List.js","Counters/CounterDashboard.js","Stats.js","App.js","index.js"],"names":["headers","getDishByName","ingredient","options","method","url","params","fields","axios","request","then","response","console","log","data","catch","error","Error","FormSelect","props","selectValue","get","useState","isLoading","setIsLoading","optionsFormatted","map","el","value","item_id","label","item_name","brand_name","nf_calories","fetchOnInput","a","responseData","hits","changeOptions","debounceFn","debounce","isClearable","placeholder","onChange","action","changeSelectValue","onInputChange","name","id","AddForm","setSelectValue","setOptions","Row","className","Col","xs","size","offset","md","newValue","newOptions","Button","disabled","onClick","selectedItem","find","addCounter","AddModuleDashboard","ListItem","item","_id","qnt","brandName","calories","Math","round","Card","CardBody","lg","ButtonGroup","changeValue","Input","bsSize","e","target","type","style","maxWidth","Badge","deleteCounter","close","List","counters","key","CounterDashboard","Stats","totalCalories","reduce","acc","percent","isMuted","length","progressColor","Jumbotron","fluid","Container","sm","color","Progress","max","initialList","nf_serving_size_qty","nf_serving_size_unit","nf_total_fat","_index","_score","_type","App","setCounter","newCounter","newCounters","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3c70ee32.chunk.js","sourcesContent":["export const list = [];\n\nexport const headers = {\n    'x-rapidapi-key': '80b329bd34msh754db68911417eep17038bjsned68b78e75b7',\n    'x-rapidapi-host': 'nutritionix-api.p.rapidapi.com'\n}","import {headers} from \"./data\";\nimport axios from 'axios';\n\nexport const getDishByName = (ingredient) => {\n    const options = {\n        method: 'GET',\n        url: `https://nutritionix-api.p.rapidapi.com/v1_1/search/${ingredient}`,\n        params:{fields: 'item_name,item_id,brand_name,nf_calories,nf_total_fat'},\n        headers\n    };\n\n    return axios.request(options).then(function (response) {\n        console.log(response.data);\n        return response.data;\n    }).catch(function (error) {\n        console.error(error);\n        throw new Error('ERROR http');\n    });\n}","import React, {useState} from 'react';\nimport Select from \"react-select\";\nimport {debounce, get} from \"lodash\";\nimport {getDishByName} from \"../query\";\n\n\nconst FormSelect = (props) => {\n    const selectValue = get (props, 'selectValue', '');\n    const options = get (props, 'options', []);\n    const [isLoading, setIsLoading] = useState(false);\n    const optionsFormatted = options.map(el => ({\n        value: el.fields.item_id,\n        label: `${el.fields.item_name} ${el.fields.brand_name} calories: ${el.fields.nf_calories}`,\n    }))\n\n    const fetchOnInput = async (value) => {\n        if (value !== '') {\n            const responseData = await getDishByName(value)\n            const hits = get(responseData, 'hits', [])\n\n            setIsLoading(false)\n            props.changeOptions(hits)\n        }\n    }\n\n    const debounceFn = debounce(fetchOnInput, 500)\n\n    const onInputChangeDebounce = (value, action) => {\n        if (action.action === 'input-change') {\n            setIsLoading(true)\n            debounceFn(value)\n        }\n    }\n\n    const onSelectChange = (value, {action}) => {\n        if (action === 'clear') {\n            props.changeSelectValue(null)\n            props.changeOptions([])\n        }\n        if (value) props.changeSelectValue(value)\n    }\n\n\n    return (\n        <Select\n            isClearable\n            // cacheOptions\n            placeholder='Search for ingredient'\n            value={selectValue}\n            onChange={onSelectChange}\n            options={optionsFormatted}\n            // isSearchable={true}\n            onInputChange={onInputChangeDebounce}\n            name=\"ingredient\"\n            id=\"ingredient\"\n            isLoading={isLoading}\n        />\n    );\n};\n\nexport default FormSelect;","import React, {useState} from 'react';\nimport {Button, Col, Row} from \"reactstrap\";\nimport FormSelect from \"./FormSelect\";\n\nconst AddForm = (props) => {\n\n    const [selectValue, setSelectValue] = useState('')\n    const [options, setOptions] = useState([])\n\n    const changeOptions = (newOptions) => {\n        setOptions(newOptions)\n    }\n\n    const changeSelectValue = (newValue) => {\n        setSelectValue(newValue)\n    }\n\n    const addButtonHandler = () => {\n        const selectedItem = options.find(el => el.fields.item_id === selectValue.value)\n        props.addCounter(selectedItem)\n    }\n\n\n    return (\n        <>\n            <Row className='justify-content-between'>\n                <Col xs={{ size: 6, offset: 2 }} md={{ size: 8, offset: 2 }}>\n                    <FormSelect selectValue={selectValue}\n                                changeSelectValue={changeSelectValue}\n                                options={options}\n                                changeOptions={changeOptions}/>\n\n                </Col>\n                <Col xs={4} md={2}>\n                    <Button disabled={selectValue === ''} className='btn-block text-white' onClick={addButtonHandler}>Add</Button>\n                </Col>\n            </Row>\n        </>\n    );\n};\n\nexport default AddForm;","import React from 'react';\nimport AddForm from \"./AddForm\";\n\n\nconst AddModuleDashboard = (props) => {\n\n\n    return (\n        <div className='my-search'>\n            <AddForm addCounter={props.addCounter}/>\n        </div>\n    );\n};\n\nexport default AddModuleDashboard;","import React from 'react';\nimport {Badge, Button, ButtonGroup, Card, CardBody, Col, Input, Row} from \"reactstrap\";\nimport {get} from \"lodash\";\n\nconst ListItem = (props) => {\n    const item = get(props, 'item', {});\n    const _id = get(item, '_id', '');\n    const qnt = get(item, 'qnt', 0);\n    const name = get(item, 'fields.item_name', '');\n    const brandName = get(item, 'fields.brand_name', '');\n    const calories = Math.round(get(item, 'fields.nf_calories', 0));\n\n    const onInputChange = (e) => {\n        props.changeValue(_id, +e.target.value)\n    }\n\n    return (\n        <>\n            <Card className='mt-2 mb-2'>\n                <CardBody>\n                    <Row className='align-items-center'>\n                        <Col md={7} xs={12} lg={8} className='d-flex align-items-center justify-content-center'>\n                            <p className='text-center'>{name + ', ' + brandName}</p>\n                        </Col>\n\n                        <Col md={2} xs={12} lg={2} className='d-flex align-items-center justify-content-center'>\n                            <Row className='align-items-center justify-content-center'>\n                                <ButtonGroup>\n                                    <Button size=\"sm\" onClick={() => props.changeValue(_id, qnt - 1)}>-</Button>\n                                    <Input className='ml-2 mr-2 my-input-number'\n                                           bsSize=\"sm\"\n                                           value={qnt}\n                                           onChange={onInputChange}\n                                           type=\"number\"\n                                           style={{maxWidth: '50px'}}\n                                    />\n                                    <Button size=\"sm\" onClick={() => props.changeValue(_id, qnt + 1)}>+</Button>\n                                </ButtonGroup>\n                            </Row>\n                        </Col>\n\n                        <Col md={3} xs={12} lg={2} className='d-flex align-items-center justify-content-center'>\n                            <Row className='align-items-center justify-content-center'>\n                                <Col xs={12} md={8}>\n                                <h3 className='pt-1 text-center'><Badge>{`${calories * qnt} cal`}</Badge></h3>\n                                </Col>\n\n                                <Col xs={12} md={4}>\n                                <Button className='btn-block pb-1 ml-1' onClick={() => props.deleteCounter(_id)}close/>\n                                </Col>\n                            </Row>\n\n                        </Col>\n                    </Row>\n\n                </CardBody>\n            </Card>\n        </>\n    );\n};\n\nexport default ListItem;","import React from 'react';\nimport {get} from \"lodash\";\nimport ListItem from \"./ListItem\";\n\nconst List = (props) => {\n    const counters = get (props, 'counters', []);\n    return (\n        <>\n            {counters.map(el => <ListItem key={el._id} item={el} deleteCounter={props.deleteCounter} changeValue={props.changeValue}/>)}\n        </>\n    );\n};\n\nexport default List;","import React from 'react';\nimport List from \"./List\";\nimport {get} from 'lodash'\n\nconst CounterDashboard = (props) => {\n    const counters = get (props, 'counters', []);\n    return (\n        <>\n            <List counters={counters} deleteCounter={props.deleteCounter} changeValue={props.changeValue}/>\n        </>\n    );\n};\n\nexport default CounterDashboard;","import React from 'react';\nimport {Badge, Col, Progress, Row, Jumbotron, Container} from \"reactstrap\";\nimport {get} from \"lodash\";\n\nconst Stats = (props) => {\n    const counters = get(props, 'counters', []);\n\n    const totalCalories = counters.reduce((acc, el) => acc + (Math.round(el.fields.nf_calories) * el.qnt), 0)\n    const percent = Math.round(totalCalories * 100 / 3000)\n\n    const percentClass = () => {\n        if (percent === 0) return 'text-muted'\n        if (percent > 100) return 'text-danger'\n        if (percent > 50) return 'text-warning'\n\n        return 'text-success'\n    }\n\n    const isMuted = counters.length === 0 ? 'text-muted' : null\n    const progressColor = percent === 0 ? 'muted' : percent < 51 ? 'success' : percent < 101 ? 'warning' :  'danger'\n\n    return (\n        <div>\n            <Jumbotron fluid>\n                <Container fluid>\n                    <Row>\n                        <Col sm={12} md={9} lg={7}>\n                            <h1 className=\"display-3 \">Track your meal</h1>\n                        </Col>\n\n                        <Col sm={12} md={3} lg={5} className=\"d-flex justify-content-center align-items-center\">\n                                <span className='lead mr-2'>Total:</span>\n                                <h2 className='d-inline'><Badge color={progressColor}>{`${totalCalories} cal`}</Badge></h2>\n                        </Col>\n                    </Row>\n\n                    <hr className=\"my-2 mb-4\"/>\n                    <Row>\n                        <Col sm={12} md={7} lg={6} className=\"d-flex justify-content-between\">\n                                <p className='ml-2'>Search for any product and click Add button</p>\n                        </Col>\n\n                        <Col sm={12} md={5} lg={6} className=\"d-flex justify-content-center\">\n                            <div className={`${isMuted} align-items-center`}>\n                                <p className=\"text-center\">You have covered <span\n                                    className={percentClass()}>{percent}%</span> of\n                                    your daily 3000 calories norm</p>\n                                <Progress className='my-progress' color={progressColor} value={percent} max={100}/>\n                            </div>\n                        </Col>\n                    </Row>\n                </Container>\n            </Jumbotron>\n        </div>\n    );\n};\n\nexport default Stats;","import React, {useState} from 'react';\nimport './App.css';\nimport {Row} from \"reactstrap\";\nimport AddModuleDashboard from \"./AddModule/AddModuleDashboard\";\nimport CounterDashboard from \"./Counters/CounterDashboard\";\nimport Stats from \"./Stats\";\n\nconst initialList = [\n    {\n        fields: {\n            brand_name: \"USDA\",\n            item_id: \"571fb9c478ad77b849f9bd91\",\n            item_name: \"Beef, ground, 80% lean meat / 20% fat, crumbles, cooked, pan - 4 oz, cooked\",\n            nf_calories: 308.45,\n            nf_serving_size_qty: 1,\n            nf_serving_size_unit: \"serving\",\n            nf_total_fat: 19.69,\n        },\n        _id: \"571fb9c478ad77b849f9bd91\",\n        _index: \"f762ef22-e660-434f-9071-a10ea6691c27\",\n        _score: 12.290755,\n        _type: \"item\",\n        qnt: 1\n    },\n    {\n        fields: {\n            brand_name: \"USDA\",\n            item_id: \"513fceb575b8dbbc210014e2\",\n            item_name: \"Carrots, cooked, boiled, drained, without salt - 1 carrot\",\n            nf_calories: 16.1,\n            nf_serving_size_qty: 1,\n            nf_serving_size_unit: \"serving\",\n            nf_total_fat: 0.08,\n        },\n        _id: \"513fceb575b8dbbc210014e2\",\n        _index: \"f762ef22-e660-434f-9071-a10ea6691c27\",\n        _score: 12.787365,\n        _type: \"item\",\n        qnt: 1\n    },\n    {\n        fields: {\n            brand_name: \"USDA\",\n            item_id: \"5976658a60263c95295fb683\",\n            item_name: \"Red wine, cabernet sauvignon - 1 bottle\",\n            nf_calories: 618.8,\n            nf_serving_size_qty: 1,\n            nf_serving_size_unit: \"serving\",\n            nf_total_fat: 0,\n        },\n        _id: \"5976658a60263c95295fb683\",\n        _index: \"f762ef22-e660-434f-9071-a10ea6691c27\",\n        _score: 12.858129,\n        _type: \"item\",\n        qnt: 1\n    }\n]\n\nfunction App() {\n    const [counters, setCounter] = useState(initialList)\n\n    const addCounter = (newCounter) => {\n        const ifDuplicate = counters.find(el => el._id === newCounter._id)\n        if (ifDuplicate) return\n\n        const newCounters = [ {...newCounter, qnt: 1}, ...counters]\n        setCounter(newCounters)\n    }\n\n    const deleteCounter = (_id) => {\n        const newCounter = counters.filter(el => el._id !== _id)\n        setCounter(newCounter)\n    }\n\n    const changeValue = (_id, newValue) => {\n        if (newValue <= 0) return\n\n        const newCounter = counters.map(el => {\n            if (el._id === _id) el.qnt = newValue\n\n            return el\n        })\n\n        setCounter(newCounter)\n    }\n\n    return (\n        <div className=\"container\">\n            <Stats counters={counters}/>\n            <AddModuleDashboard addCounter={addCounter}/>\n            <Row>\n                <CounterDashboard counters={counters} deleteCounter={deleteCounter} changeValue={changeValue}/>\n            </Row>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}